!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASFLAGS	Makefile	/^ASFLAGS = -g $(OPTIMIZATION) $(INCLUDES) -D$(CHIP) -D__ASSEMBLY__$/;"	m
ASM_OBJECTS	Makefile	/^ASM_OBJECTS = board_cstartup.o$/;"	m
AT91C_ID_TC0	main.c	175;"	d	file:
AT91LIB	Makefile	/^AT91LIB = ..\/at91lib$/;"	m
BIN	Makefile	/^BIN = bin$/;"	m
BOARD	Makefile	/^BOARD = at91sam7s-ek$/;"	m
BOARDS	Makefile	/^BOARDS = $(AT91LIB)\/boards$/;"	m
CC	Makefile	/^CC = $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -mlong-calls -ffunction-sections -std=c99$/;"	m
CHIP	Makefile	/^CHIP  = at91sam7s64$/;"	m
CROSS_COMPILE	Makefile	/^CROSS_COMPILE = arm-none-eabi-$/;"	m
C_OBJECTS	Makefile	/^C_OBJECTS = main.o$/;"	m
DATABUFFERSIZE	main.c	179;"	d	file:
INCLUDES	Makefile	/^INCLUDES = -I$(AT91LIB)\/boards\/$(BOARD) -I$(AT91LIB)\/peripherals $/;"	m
IR_Configure	main.c	/^static void IR_Configure( void )$/;"	f	file:
ISR_IR	main.c	/^static void ISR_IR(const Pin *pPin)$/;"	f	file:
ISR_Timer1	main.c	/^static void ISR_Timer1()$/;"	f	file:
KEY_ACK	microrl.h	11;"	d
KEY_BEL	microrl.h	12;"	d
KEY_BS	microrl.h	13;"	d
KEY_CAN	microrl.h	29;"	d
KEY_CR	microrl.h	18;"	d
KEY_DC1	microrl.h	22;"	d
KEY_DC2	microrl.h	23;"	d
KEY_DC3	microrl.h	24;"	d
KEY_DC4	microrl.h	25;"	d
KEY_DEL	microrl.h	38;"	d
KEY_DLE	microrl.h	21;"	d
KEY_EM	microrl.h	30;"	d
KEY_ENQ	microrl.h	10;"	d
KEY_EOT	microrl.h	9;"	d
KEY_ESC	microrl.h	32;"	d
KEY_ETB	microrl.h	28;"	d
KEY_ETX	microrl.h	8;"	d
KEY_FF	microrl.h	17;"	d
KEY_FS	microrl.h	33;"	d
KEY_GS	microrl.h	34;"	d
KEY_HT	microrl.h	14;"	d
KEY_LF	microrl.h	15;"	d
KEY_NAK	microrl.h	26;"	d
KEY_NUL	microrl.h	5;"	d
KEY_RS	microrl.h	35;"	d
KEY_SI	microrl.h	20;"	d
KEY_SO	microrl.h	19;"	d
KEY_SOH	microrl.h	6;"	d
KEY_STX	microrl.h	7;"	d
KEY_SUB	microrl.h	31;"	d
KEY_SYN	microrl.h	27;"	d
KEY_US	microrl.h	36;"	d
KEY_VT	microrl.h	16;"	d
LDFLAGS	Makefile	/^LDFLAGS = -g $(OPTIMIZATION) -nostartfiles -Wl,--gc-sections$/;"	m
LowPowerMode	main.c	/^void LowPowerMode(void)$/;"	f
NormalPowerMode	main.c	/^void NormalPowerMode(void)$/;"	f
OBJ	Makefile	/^OBJ = obj$/;"	m
OBJCOPY	Makefile	/^OBJCOPY = $(CROSS_COMPILE)objcopy$/;"	m
OPTIMIZATION	Makefile	/^OPTIMIZATION = -Os$/;"	m
OUTPUT	Makefile	/^OUTPUT := $(BIN)\/$(OUTPUT)$/;"	m
OUTPUT	Makefile	/^OUTPUT = cdc$/;"	m
PERIPH	Makefile	/^PERIPH = $(AT91LIB)\/peripherals$/;"	m
RULES	Makefile	/^define RULES$/;"	m
SIZE	Makefile	/^SIZE = $(CROSS_COMPILE)size$/;"	m
STATE_IDLE	main.c	183;"	d	file:
STATE_RESUME	main.c	187;"	d	file:
STATE_SUSPEND	main.c	185;"	d	file:
TRACE_LEVEL	Makefile	/^TRACE_LEVEL = 5$/;"	m
USB	Makefile	/^USB = $(AT91LIB)\/usb$/;"	m
USBDCallbacks_Resumed	main.c	/^void USBDCallbacks_Resumed(void)$/;"	f
USBDCallbacks_Suspended	main.c	/^void USBDCallbacks_Suspended(void)$/;"	f
USBState	main.c	/^unsigned char USBState = STATE_IDLE;$/;"	v
UTILITY	Makefile	/^UTILITY = $(AT91LIB)\/utility$/;"	m
UsbDataReceived	main.c	/^static void UsbDataReceived(unsigned int unused,$/;"	f	file:
VBUS_CONFIGURE	main.c	242;"	d	file:
_COMMAND_LINE_LEN	microrl.h	42;"	d
_DATA_LEN	ir.h	7;"	d
_HISTORY_LEVELS	microrl.h	41;"	d
_IR_H_	ir.h	2;"	d
_IR_IDLE	ir.h	9;"	d
_IR_RX_DATA	ir.h	12;"	d
_IR_SYNCHRO_DOWN	ir.h	11;"	d
_IR_SYNCHRO_UP	ir.h	10;"	d
_MICRORL_H_	microrl.h	2;"	d
_NEC_PR	ir.h	15;"	d
_PROMPT_DEFAUTL	microrl.h	43;"	d
_TIME_DATA_0_PULSE	ir.h	21;"	d
_TIME_DATA_1_PULSE	ir.h	20;"	d
_TIME_SYNCH_HI_PULSE	ir.h	18;"	d
_TIME_SYNCH_LO_PULSE	ir.h	19;"	d
_UNDEF_PR	ir.h	14;"	d
accept_code	ir.c	/^static int accept_code (ir_t * this)$/;"	f	file:
cdc_write	main.c	/^void cdc_write (char * data)$/;"	f
cmdline	microrl.h	/^	char cmdline [_COMMAND_LINE_LEN];$/;"	m	struct:__anon2
cmdpos	microrl.h	/^	int cmdpos; \/\/ last position in command line$/;"	m	struct:__anon2
code	ir.h	/^	unsigned int code; \/\/ at least 16 bit on your platform!!$/;"	m	struct:__anon1
count	ir.h	/^	int count;$/;"	m	struct:__anon1
execute	microrl.h	/^	int (*execute) (int argc, const char * const * argv );$/;"	m	struct:__anon2
false	ir.h	5;"	d
false	main.c	163;"	d	file:
get_complition	microrl.h	/^	char * (*get_complition) (int argc, const char * const * argv );	$/;"	m	struct:__anon2
ir	main.c	/^ir_t ir;$/;"	v
ir_code	ir.c	/^int ir_code (ir_t * this)$/;"	f
ir_init	ir.c	/^void ir_init (ir_t * this)$/;"	f
ir_line_handler	ir.c	/^void ir_line_handler (ir_t * this, int level)$/;"	f
ir_t	ir.h	/^} ir_t;$/;"	t	typeref:struct:__anon1
ir_time_handler	ir.c	/^void ir_time_handler (ir_t * this)$/;"	f
main	main.c	/^int main()$/;"	f
microrl_init	microrl.c	/^void microrl_init (microrl_t * this, void (*print) (char *)) $/;"	f
microrl_insert_char	microrl.c	/^void microrl_insert_char (microrl_t * this, int ch)$/;"	f
microrl_set_complite_callback	microrl.c	/^void microrl_set_complite_callback (microrl_t * this, char * (*get_complition)(int, const char* const*))$/;"	f
microrl_set_execute_callback	microrl.c	/^void microrl_set_execute_callback (microrl_t * this, int (*execute)(int, const char* const*))$/;"	f
microrl_t	microrl.h	/^} microrl_t;$/;"	t	typeref:struct:__anon2
pinIR	main.c	/^static const Pin pinIR = PIN_PUSHBUTTON_2;$/;"	v	file:
pinToggle	ir.c	/^static const Pin pinToggle = PIN_LED_DS4;$/;"	v	file:
pinToggle	main.c	/^static const Pin pinToggle = PIN_LED_DS4;$/;"	v	file:
pins	main.c	/^static const Pin pins[] = {PIN_USART0_TXD, PIN_USART0_RXD};$/;"	v	file:
pir	main.c	/^ir_t * pir = &ir;$/;"	v
print	microrl.h	/^	void (*print) (char *);$/;"	m	struct:__anon2
print_prompt	microrl.c	/^static void print_prompt (microrl_t * this)$/;"	f	file:
prl	main.c	/^microrl_t * prl = &rl;$/;"	v
prompt_default	microrl.c	/^static const char * prompt_default = _PROMPT_DEFAUTL;$/;"	v	file:
prompt_str	microrl.h	/^	char * prompt_str;$/;"	m	struct:__anon2
protocol	ir.h	/^	int protocol;$/;"	m	struct:__anon1
raw	ir.h	/^	unsigned int raw;$/;"	m	struct:__anon1
ready_flag	ir.h	/^	int ready_flag;$/;"	m	struct:__anon1
rl	main.c	/^microrl_t rl;$/;"	v
state	ir.h	/^	int state;$/;"	m	struct:__anon1
terminal_newline	microrl.c	/^static void terminal_newline (microrl_t * this)$/;"	f	file:
timer	ir.h	/^	int timer;$/;"	m	struct:__anon1
true	ir.h	4;"	d
true	main.c	162;"	d	file:
usartBuffers	main.c	/^static unsigned char usartBuffers[2][DATABUFFERSIZE];$/;"	v	file:
usartCurrentBuffer	main.c	/^static unsigned char usartCurrentBuffer = 0;$/;"	v	file:
usbBuffer	main.c	/^static unsigned char usbBuffer[DATABUFFERSIZE];$/;"	v	file:
usb_recive	main.c	/^static int usb_recive;$/;"	v	file:
