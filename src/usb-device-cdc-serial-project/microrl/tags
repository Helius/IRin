!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC        = gcc$/;"	m
CCFLAGS	Makefile	/^CCFLAGS   = -Wall $(DEBUG) -std=gnu99 $/;"	m
CPP	Makefile	/^CPP       = g++$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS  = $(DEBUG) $/;"	m
KEY_ACK	microrl.h	14;"	d
KEY_BEL	microrl.h	15;"	d
KEY_BS	microrl.h	16;"	d
KEY_CAN	microrl.h	32;"	d
KEY_CR	microrl.h	21;"	d
KEY_DC1	microrl.h	25;"	d
KEY_DC2	microrl.h	26;"	d
KEY_DC3	microrl.h	27;"	d
KEY_DC4	microrl.h	28;"	d
KEY_DEL	microrl.h	41;"	d
KEY_DLE	microrl.h	24;"	d
KEY_EM	microrl.h	33;"	d
KEY_ENQ	microrl.h	13;"	d
KEY_EOT	microrl.h	12;"	d
KEY_ESC	microrl.h	35;"	d
KEY_ETB	microrl.h	31;"	d
KEY_ETX	microrl.h	11;"	d
KEY_FF	microrl.h	20;"	d
KEY_FS	microrl.h	36;"	d
KEY_GS	microrl.h	37;"	d
KEY_HT	microrl.h	17;"	d
KEY_LF	microrl.h	18;"	d
KEY_NAK	microrl.h	29;"	d
KEY_NUL	microrl.h	8;"	d
KEY_RS	microrl.h	38;"	d
KEY_SI	microrl.h	23;"	d
KEY_SO	microrl.h	22;"	d
KEY_SOH	microrl.h	9;"	d
KEY_STX	microrl.h	10;"	d
KEY_SUB	microrl.h	34;"	d
KEY_SYN	microrl.h	30;"	d
KEY_US	microrl.h	39;"	d
KEY_VT	microrl.h	19;"	d
LDFLAGS	Makefile	/^LDFLAGS   = $/;"	m
_COMMAND_LINE_LEN	microrl.h	45;"	d
_COMMAND_TOKEN_NMB	microrl.h	46;"	d
_HISTORY_LEVELS	microrl.h	44;"	d
_MICRORL_H_	microrl.h	2;"	d
_PROMPT_DEFAUTL	microrl.h	47;"	d
cmdline	microrl.h	/^	char cmdline [_COMMAND_LINE_LEN];$/;"	m	struct:__anon1
cmdpos	microrl.h	/^	int cmdpos;                           \/\/ last position in command line$/;"	m	struct:__anon1
execute	microrl.h	/^	int (*execute) (int argc, const char * const * argv );$/;"	m	struct:__anon1
execute	microrl_tst.c	/^int execute (int i, const char * const * tkn_arr)$/;"	f
false	microrl.h	5;"	d
find_not_witespace	microrl.c	/^char * find_not_witespace (char * str)$/;"	f
find_whitespace	microrl.c	/^char * find_whitespace (char * str)$/;"	f
get_char	microrl_tst.c	/^char get_char (void)$/;"	f
get_complition	microrl.h	/^	char * (*get_complition) (int argc, const char * const * argv );	$/;"	m	struct:__anon1
main	microrl_tst.c	/^void main (int argc, char ** argv)$/;"	f
microrl_init	microrl.c	/^void microrl_init (microrl_t * this, void (*print) (char *)) $/;"	f
microrl_insert_char	microrl.c	/^void microrl_insert_char (microrl_t * this, int ch)$/;"	f
microrl_set_complite_callback	microrl.c	/^void microrl_set_complite_callback (microrl_t * this, char * (*get_complition)(int, const char* const*))$/;"	f
microrl_set_execute_callback	microrl.c	/^void microrl_set_execute_callback (microrl_t * this, int (*execute)(int, const char* const*))$/;"	f
microrl_t	microrl.h	/^} microrl_t;$/;"	t	typeref:struct:__anon1
print	microrl.h	/^	void (*print) (char *);$/;"	m	struct:__anon1
print	microrl_tst.c	/^void print (char * str)$/;"	f
print_prompt	microrl.c	/^static void print_prompt (microrl_t * this)$/;"	f	file:
prompt_default	microrl.c	/^static const char * prompt_default = _PROMPT_DEFAUTL;$/;"	v	file:
prompt_str	microrl.h	/^	char * prompt_str;$/;"	m	struct:__anon1
split	microrl.c	/^int split (char * cmd_line, const char ** tkn_arr)$/;"	f
terminal_newline	microrl.c	/^static void terminal_newline (microrl_t * this)$/;"	f	file:
tkn_arr	microrl.h	/^	char const * tkn_arr [_COMMAND_TOKEN_NMB];$/;"	m	struct:__anon1
true	microrl.h	4;"	d
